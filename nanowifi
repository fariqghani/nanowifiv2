
// Include Libraries
#include "Arduino.h"
#include "NewPing.h"
#include "LiquidCrystal.h"
#include "Relay.h"
#include <SoftwareSerial.h>


// Pin Definitions
#define HCSR04_PIN_TRIG  11
#define HCSR04_PIN_ECHO 12
#define LCD_PIN_RS  9
#define LCD_PIN_E 8
#define LCD_PIN_DB4 4
#define LCD_PIN_DB5 5
#define LCD_PIN_DB6 6
#define LCD_PIN_DB7 7
#define RELAYMODULE_PIN_SIGNAL  10

#ifndef HAVE_HWEspSerial
#include "SoftwareSerial.h"
SoftwareSerial EspSerial(2, 3); // RX, TX
#endif
  
NewPing hcsr04(HCSR04_PIN_TRIG,HCSR04_PIN_ECHO);
LiquidCrystal lcd(LCD_PIN_RS,LCD_PIN_E,LCD_PIN_DB4,LCD_PIN_DB5,LCD_PIN_DB6,LCD_PIN_DB7);
Relay relayModule(RELAYMODULE_PIN_SIGNAL);


// define vars for testing menu
const int timeout = 10000;       //define timeout of 10 sec
char menuOption = 0;
long time0;

// Setup the essentials for your circuit to work. It runs first every time your circuit is powered with electricity.

void setup() 
{
    Serial.begin(115200);
    while (!Serial) ; // wait for serial port to connect. Needed for native USB
    Serial.println("start");
    delay(2000);
    EspSerial.begin(9600); // your esp's baud rate might be different 9600, 57600, 76800 or 115200
    delay(2000);
    Serial.println("Trying to send AT+GMR ...");
    EspSerial.println("AT+GMR");
    
    // set up the LCD's number of columns and rows
    lcd.begin(16, 2);
    menuOption = menu();
    
}

// Main logic of your circuit. It defines the interaction between the components you selected. After setup, it runs over and over again, in an eternal loop.
void loop() 
{
    if(EspSerial.available()) // check if the ESP module is sending a message 
    {
      while(EspSerial.available())
      {
        // The esp has data so display its output to the serial window 
        char c = EspSerial.read(); // read the next character.
        Serial.write(c);
      }  
    }
    
    if(Serial.available()) // check if connection through Serial Monitor from computer is available
    {
      // the following delay is required because otherwise the arduino will read the first letter of the command but not the rest
      // In other words without the delay if you use AT+RST, for example, the Arduino will read the letter A send it, then read the rest and send it
      // but we want to send everything at the same time.
      delay(1000); 
      
      String command="";
      
      while(Serial.available()) // read the command character by character
      {
          // read one character
        command+=(char)Serial.read();
      }
      EspSerial.println(command); // send the read character to the Esp module
    }
    
    if(menuOption == '1') {
    // Ultrasonic Sensor - HC-SR04 - Test Code
    // Read distance measurment from UltraSonic sensor           
    int hcsr04Dist = hcsr04.ping_cm();
    delay(10);
    Serial.print(F("Distance: ")); Serial.print(hcsr04Dist); Serial.println(F("[cm]"));

    }
    else if(menuOption == '2') {
    // LCD 16x2 - Test Code
    // Print a message to the LCD.
    lcd.setCursor(0, 0);
    lcd.print("Circuito Rocks !");
    // Turn off the display:
    lcd.noDisplay();
    delay(500);
    // Turn on the display:
    lcd.display();
    delay(500);
    }
    else if(menuOption == '3') {
    // Relay Module - Test Code
    // The relay will turn on and off for 500ms (0.5 sec)
    relayModule.on();       // 1. turns on
    delay(500);             // 2. waits 500 milliseconds (0.5 sec). Change the value in the brackets (500) for a longer or shorter delay in milliseconds.
    relayModule.off();      // 3. turns off.
    delay(500);             // 4. waits 500 milliseconds (0.5 sec). Change the value in the brackets (500) for a longer or shorter delay in milliseconds.
    }
    
    if (millis() - time0 > timeout)
    {
        menuOption = menu();
    }
    
}



// Menu function for selecting the components to be tested
// Follow serial monitor for instrcutions
char menu()
{

    Serial.println(F("\nWhich component would you like to test?"));
    Serial.println(F("(1) Ultrasonic Sensor - HC-SR04"));
    Serial.println(F("(2) LCD 16x2"));
    Serial.println(F("(3) Relay Module"));
    Serial.println(F("(menu) send anything else or press on board reset button\n"));
    while (!Serial.available());

    // Read data from serial monitor if received
    while (Serial.available()) 
    {
        char c = Serial.read();
        if (isAlphaNumeric(c)) 
        {   
            
            if(c == '1') 
          Serial.println(F("Now Testing Ultrasonic Sensor - HC-SR04"));
        else if(c == '2') 
          Serial.println(F("Now Testing LCD 16x2"));
        else if(c == '3') 
          Serial.println(F("Now Testing Relay Module"));
            else
            {
                Serial.println(F("illegal input!"));
                return 0;
            }
            time0 = millis();
            return c;
        }
    }
}
